# SPDX-License-Identifier: BSD-3-Clause
# (c) 2021, Konstantin Demin

#################################################
FROM rockdrilla/build-essential:debian-unstable AS base

WORKDIR /tmp

COPY *.sh /tmp/
RUN chmod +x /tmp/*.sh

RUN mkdir -p /usr/local/go /tmp/go ; \
    install -m 0777 -d /go ; \
    install -m 0777 -d /go/src /go/bin /go/tmp /go/build

#################################################
FROM base AS buildbase

ARG GOLANG_VERSION=latest

RUN /tmp/latest.sh $GOLANG_VERSION /tmp/go.tar.gz

#################################################
FROM buildbase AS golang-dist

RUN /opt/apt.sh install golang-go
RUN /opt/cleanup.sh

COPY --from=buildbase  /tmp/go.tar.gz  /tmp/go.tar.gz

#################################################
FROM golang-dist AS env-common

RUN go env \
    | sed -En '/^GO((HOST|)(OS|ARCH)|ARM)=.*/{s##export \0#;p;}' \
    | tee /tmp/env

#################################################
FROM base AS env-stage1

RUN p="/tmp/go" ; export DEB_BUILD_MAINT_OPTIONS='hardening=-all' ; \
    mkdir -p $p ; cd $p/ ; \
    { \
        echo 'export CGO_ENABLED="1"' ; \
        dpkg-buildflags --export=sh \
        | sed -En '/^(export )?([^=]+)=(.+)$/{s##export \2=\3\nexport CGO_\2=\3#;p;}' ; \
    } > /tmp/env.stage1

#################################################
FROM base AS env-stage2

RUN p="/usr/local/go" ; export DEB_BUILD_MAINT_OPTIONS='hardening=+all' ; \
    mkdir -p $p ; cd $p/ ; \
    { \
        echo 'export CGO_ENABLED="0"' ; \
        dpkg-buildflags --export=sh \
        | sed -En '/^(export )?([^=]+)=(.+)$/{s##export \2=\3\nexport CGO_\2=\3#;p;}' ; \
    } > /tmp/env.stage2

#################################################
FROM golang-dist AS stage1

COPY --from=env-common  /tmp/env        /tmp/
COPY --from=env-stage1  /tmp/env.stage1 /tmp/env.stage1

RUN export GOROOT_BOOTSTRAP="$(go env GOROOT)" ; \
    . /tmp/env ; . /tmp/env.stage1 ; \
    /tmp/build.sh /tmp /tmp/go.tar.gz

#################################################
FROM buildbase AS stage2

COPY --from=env-common  /tmp/env        /tmp/
COPY --from=env-stage2  /tmp/env.stage2 /tmp/env.stage2
COPY --from=stage1      /tmp/go/        /tmp/go/

RUN export GOROOT_BOOTSTRAP="/tmp/go" ; \
    export PATH="/tmp/go/bin:${PATH}" ; \
    . /tmp/env ; . /tmp/env.stage2 ; \
    /tmp/build.sh /usr/local /tmp/go.tar.gz

RUN /opt/cleanup.sh

#################################################

FROM scratch

ENV GOROOT="/usr/local/go"
ENV GOPATH="/go"
ENV GOCACHE="/go/build"

ENV PATH="/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
ENV LANG="C.UTF-8"
ENV LC_ALL="C.UTF-8"
ENV TERM="xterm"
ENV TMPDIR="/go/tmp"
ENV TMP="/go/tmp"
ENV TEMPDIR="/go/tmp"
ENV TEMP="/go/tmp"

COPY --from=base    /etc/ssl       /etc/ssl
COPY --from=base    /go            /go
COPY --from=stage2  /usr/local/go  /usr/local/go

WORKDIR /go

ENTRYPOINT [ "/usr/local/go/bin/go" ]

RUN [ "/usr/local/go/bin/go", "version" ]
